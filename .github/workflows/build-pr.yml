name: Testing image creation on PR

on:
  pull_request:
    branches:
      - master

jobs:
  push:
    name: Package all services and push them to ECR
    runs-on: ubuntu-latest

    env:
      ECR_REGISTRY: 351409330128.dkr.ecr.ap-south-1.amazonaws.com

    steps:
      - uses: actions/checkout@v2
      - uses: rlespinasse/github-slug-action@v2.x
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.0.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: "351409330128"
      - uses: futuratrepadeira/changed-files@v3.2.1
        id: changed_files
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: echo ::set-env name=SERVICES::$(echo ${{ steps.changed_files.outputs.files_updated }} | tr " " "\n" | cut -d '/' -f 1 | uniq  )
      - name: Atlantis
        if : contains(env.SERVICES,'atlantis')
        run: |
          docker build -f atlantis/Dockerfile -t $ECR_REGISTRY/atlantis:$GITHUB_REF_SLUG-$GITHUB_SHA_SHORT atlantis/
      - name: Fluentd
        if: contains(env.SERVICES,'fluentd')
        run: |
          docker build -f fluentd/Dockerfile -t $ECR_REGISTRY/fluentd:$GITHUB_REF_SLUG-$GITHUB_SHA_SHORT fluentd/
      - name: SSM
        if: contains(env.SERVICES,'ssm')
        run: |
          docker build -f ssm/Dockerfile -t $ECR_REGISTRY/ssm-agent:$GITHUB_REF_SLUG-$GITHUB_SHA_SHORT ssm/
      - name: Fluentbit
        if: contains(env.SERVICES,'fluentbit')
        run: |
          docker build -f fluentbit/Dockerfile -t $ECR_REGISTRY/fluentbit:$GITHUB_REF_SLUG-$GITHUB_SHA_SHORT fluentbit/
      - name: Github-Runner
        if: contains(env.SERVICES,'github-runner')
        run: |
          docker build -f github-runner/Dockerfile -t $ECR_REGISTRY/github-runner:$GITHUB_REF_SLUG-$GITHUB_SHA_SHORT github-runner/
      - name: Logout of Amazon ECR
        if: always()
        run: docker logout $ECR_REGISTRY